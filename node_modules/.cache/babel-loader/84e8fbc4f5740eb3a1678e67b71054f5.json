{"ast":null,"code":"import _slicedToArray from\"/home/erzihark/Desktop/Code/candy-machine-mint/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import Clock from\"./Clock\";import{jsx as _jsx}from\"react/jsx-runtime\";export default function PlaceholderButton(){var _useState=useState(),_useState2=_slicedToArray(_useState,2),timerDays=_useState2[0],setTimerDays=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),timerHours=_useState4[0],setTimerHours=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),timerMinutes=_useState6[0],setTimerMinutes=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),timerSeconds=_useState8[0],setTimerSeconds=_useState8[1];var interval;var startTimer=function startTimer(){var countDownDate=new Date('Nov 5 2021 18:00:00 EST').getTime();interval=setInterval(function(){var now=new Date().getTime();var distance=countDownDate-now;var days=Math.floor(distance/(24*60*60*1000));var hours=Math.floor(distance%(24*60*60*1000)/(1000*60*60));var minutes=Math.floor(distance%(60*60*1000)/(1000*60));var seconds=Math.floor(distance%(60*1000)/1000);if(distance<0){// Stop Timer\nclearInterval(interval.current);}else{// Update Timer\nsetTimerDays(days);setTimerHours(hours);setTimerMinutes(minutes);setTimerSeconds(seconds);}});};useEffect(function(){startTimer();});return/*#__PURE__*/_jsx(\"section\",{className:\"countdown\",children:/*#__PURE__*/_jsx(Clock,{timerDays:timerDays,timerHours:timerHours,timerMinutes:timerMinutes,timerSeconds:timerSeconds})});}","map":{"version":3,"sources":["/home/erzihark/Desktop/Code/candy-machine-mint/src/PlaceholderButton.js"],"names":["React","useState","useEffect","Clock","PlaceholderButton","timerDays","setTimerDays","timerHours","setTimerHours","timerMinutes","setTimerMinutes","timerSeconds","setTimerSeconds","interval","startTimer","countDownDate","Date","getTime","setInterval","now","distance","days","Math","floor","hours","minutes","seconds","clearInterval","current"],"mappings":"qKAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,C,2CAEA,cAAe,SAASC,CAAAA,iBAAT,EAA6B,eAEPH,QAAQ,EAFD,wCAElCI,SAFkC,eAEvBC,YAFuB,8BAGLL,QAAQ,EAHH,yCAGlCM,UAHkC,eAGtBC,aAHsB,8BAIDP,QAAQ,EAJP,yCAIlCQ,YAJkC,eAIpBC,eAJoB,8BAKDT,QAAQ,EALP,yCAKlCU,YALkC,eAKpBC,eALoB,eAOxC,GAAIC,CAAAA,QAAJ,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACrB,GAAMC,CAAAA,aAAa,CAAG,GAAIC,CAAAA,IAAJ,CAAS,yBAAT,EAAoCC,OAApC,EAAtB,CAEAJ,QAAQ,CAAGK,WAAW,CAAC,UAAM,CACzB,GAAMC,CAAAA,GAAG,CAAG,GAAIH,CAAAA,IAAJ,GAAWC,OAAX,EAAZ,CAEA,GAAMG,CAAAA,QAAQ,CAAGL,aAAa,CAAGI,GAAjC,CAEA,GAAME,CAAAA,IAAI,CAAGC,IAAI,CAACC,KAAL,CAAWH,QAAQ,EAAI,GAAK,EAAL,CAAU,EAAV,CAAe,IAAnB,CAAnB,CAAb,CACA,GAAMI,CAAAA,KAAK,CAAGF,IAAI,CAACC,KAAL,CACTH,QAAQ,EAAI,GAAK,EAAL,CAAU,EAAV,CAAe,IAAnB,CAAT,EAAsC,KAAO,EAAP,CAAY,EAAlD,CADU,CAAd,CAGA,GAAMK,CAAAA,OAAO,CAAGH,IAAI,CAACC,KAAL,CAAYH,QAAQ,EAAI,GAAK,EAAL,CAAU,IAAd,CAAT,EAAiC,KAAO,EAAxC,CAAX,CAAhB,CACA,GAAMM,CAAAA,OAAO,CAAGJ,IAAI,CAACC,KAAL,CAAYH,QAAQ,EAAI,GAAK,IAAT,CAAT,CAA2B,IAAtC,CAAhB,CAEA,GAAIA,QAAQ,CAAG,CAAf,CAAkB,CACd;AAEAO,aAAa,CAACd,QAAQ,CAACe,OAAV,CAAb,CACH,CAJD,IAIO,CACH;AACAtB,YAAY,CAACe,IAAD,CAAZ,CACAb,aAAa,CAACgB,KAAD,CAAb,CACAd,eAAe,CAACe,OAAD,CAAf,CACAb,eAAe,CAACc,OAAD,CAAf,CACH,CACJ,CAvBqB,CAAtB,CAwBH,CA3BD,CA6BAxB,SAAS,CAAC,UAAM,CACZY,UAAU,GACb,CAFQ,CAAT,CAIA,mBACI,gBAAS,SAAS,CAAE,WAApB,uBACI,KAAC,KAAD,EACI,SAAS,CAAET,SADf,CAEI,UAAU,CAAEE,UAFhB,CAGI,YAAY,CAAEE,YAHlB,CAII,YAAY,CAAEE,YAJlB,EADJ,EADJ,CAUH","sourcesContent":["import React, {useState, useEffect} from \"react\"\nimport Clock from \"./Clock\"\n\nexport default function PlaceholderButton() {\n\n    const[timerDays, setTimerDays] = useState();\n    const[timerHours, setTimerHours] = useState();\n    const[timerMinutes, setTimerMinutes] = useState();\n    const[timerSeconds, setTimerSeconds] = useState();\n\n    let interval;\n\n    const startTimer = () => {\n        const countDownDate = new Date('Nov 5 2021 18:00:00 EST').getTime();\n\n        interval = setInterval(() => {\n            const now = new Date().getTime();\n\n            const distance = countDownDate - now;\n\n            const days = Math.floor(distance / (24 * 60 * 60 * 1000));\n            const hours = Math.floor(\n                (distance % (24 * 60 * 60 * 1000)) / (1000 * 60 * 60)\n            );\n            const minutes = Math.floor((distance % (60 * 60 * 1000)) / (1000 * 60));\n            const seconds = Math.floor((distance % (60 * 1000)) / 1000);\n\n            if (distance < 0) {\n                // Stop Timer\n\n                clearInterval(interval.current);\n            } else {\n                // Update Timer\n                setTimerDays(days);\n                setTimerHours(hours);\n                setTimerMinutes(minutes);\n                setTimerSeconds(seconds);\n            }\n        });\n    };\n\n    useEffect(() => {\n        startTimer();\n    });\n\n    return (\n        <section className={\"countdown\"}>\n            <Clock\n                timerDays={timerDays}\n                timerHours={timerHours}\n                timerMinutes={timerMinutes}\n                timerSeconds={timerSeconds}\n            />\n        </section>\n    )\n}"]},"metadata":{},"sourceType":"module"}